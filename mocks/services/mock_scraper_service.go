// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/scraperService.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	time "time"

	models "edgecom.ai/timeseries/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// MockScraperService is a mock of ScraperService interface.
type MockScraperService struct {
	ctrl     *gomock.Controller
	recorder *MockScraperServiceMockRecorder
}

// MockScraperServiceMockRecorder is the mock recorder for MockScraperService.
type MockScraperServiceMockRecorder struct {
	mock *MockScraperService
}

// NewMockScraperService creates a new mock instance.
func NewMockScraperService(ctrl *gomock.Controller) *MockScraperService {
	mock := &MockScraperService{ctrl: ctrl}
	mock.recorder = &MockScraperServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScraperService) EXPECT() *MockScraperServiceMockRecorder {
	return m.recorder
}

// FetchData mocks base method.
func (m *MockScraperService) FetchData(ctx context.Context, start, end time.Time, dataCh chan models.TimeSeriesResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchData", ctx, start, end, dataCh)
	ret0, _ := ret[0].(error)
	return ret0
}

// FetchData indicates an expected call of FetchData.
func (mr *MockScraperServiceMockRecorder) FetchData(ctx, start, end, dataCh interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchData", reflect.TypeOf((*MockScraperService)(nil).FetchData), ctx, start, end, dataCh)
}

// StoreData mocks base method.
func (m *MockScraperService) StoreData(ctx context.Context, data models.TimeSeriesResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreData", ctx, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreData indicates an expected call of StoreData.
func (mr *MockScraperServiceMockRecorder) StoreData(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreData", reflect.TypeOf((*MockScraperService)(nil).StoreData), ctx, data)
}
